#!/bin/bash
#
# Description:   Summit XL simulation on docker
#                bring-up script data
#
# Company:       Robotnik Automation S.L.L.
# Creation Year: 2021
# Author:        Guillem Gari  <ggari@robotnik.es>

# VARIABLES
###########

#Colour
red_colour='\033[0;31m'
green_colour='\033[0;32m'
light_purple_colour='\033[1;35m'
err_colour="${red_colour}"
nfo_colour="${light_purple_colour}"
suc_colour="${green_colour}"
no_colour='\033[0m'

cuda_version=none

#Success String
suc_str_tool_check_success='All required tools are available'
suc_str_display='Display found'
suc_str_cuda='Nvidia CUDA version ${cuda_version}'
suc_str_nvidia_docker='Nvidia docker operative'
suc_str_image_build='Container image ${image_complete_name} builded'
suc_str_already_running='The system is not running the simulation'
suc_str_destroy_running_sim='Simulation destroyed'

#Info Strings
nfo_str_tool_checking='Checking tools'
nfo_str_display='Checking display'
nfo_str_cuda='Checking Nvidia CUDA'
nfo_str_nvidia_docker='Checking Nvidia Docker with image ${nvidia_docker_image}'
nfo_str_tool_building='Building image ${image_complete_name}'
nfo_str_check_already_running='Checking if the simulation is already running on the system'
nfo_str_already_running='There is a simulation already running on the system, destroying it'
nfo_str_running_simulation='Running simulation for ${selected_robot}'

#Error Strings
err_str_required_tool_not_found='Required tool not found: ${tool}'
err_str_display='Display not found, a graphical interface is required'
err_str_cuda='Nvidia CUDA not found'
err_str_nvidia_docker='Nvidia docker not found'
err_str_build_image_failed='Could not build container image'
err_str_destroy_running_sim='Simulation ${instance_name} could not be destroyed'
err_str_x11_enable_server_access='Could not allowing X11 access'
err_str_x11_disable_server_access='Could not restrict X11 access'
err_str_nvidia_docker_img_not_found='Couldn find a suitable testing image of nvidia docker'
err_str_unrecognized_robot='robot not recognized: ${selected_robot}'


tool_list=(\
    docker \
    readlink \
    dirname \
    xhost \
    nvidia_smi \
    wget \
)

robot_name="RB VOGUI"

instance_name=rb_vogui_sim_instance

image_name_org="robotnik"
image_name="rb_vogui_sim"
image_version="latest"
image_complete_name='${image_name_org}/${image_name}:${image_version}'

ros_master_port="11311"
ros_master_uri="http://localhost:${ros_master_port}"
gazebo_master_port="11345"
gazebo_master_uri="http://localhost:${gazebo_master_port}"

base_url_registry="https://registry.hub.docker.com/v1/repositories"
nvidia_repo="nvidia/cuda"
nvidia_repo_full="${base_url_registry}/${nvidia_repo}/tags"
nvidia_docker_image=""

default_robot='rb_vogui'
selected_robot="${default_robot}"

declare -A ros_bringup_package_array
declare -A ros_launch_file_array

ros_bringup_package_array[rb_vogui]="rbvogui_sim_bringup"
ros_launch_file_array[rb_vogui]="rbvogui_complete.launch \
kinematics:=omni \
twist2ackermann:=false \
"

ros_bringup_package_array[rb_vogui_one_ur_arm]="rbvogui_sim_bringup"
ros_launch_file_array[rb_vogui_one_ur_arm]="rbvogui_complete.launch \
robot_xacro:=rbvogui_std_ur10.urdf.xacro \
launch_arm_control:=true \
arm_controllers:=arm_controller \
paused:=true \
"

ros_bringup_package_array[rb_vogui_xl]="rbvogui_sim_bringup"
ros_launch_file_array[rb_vogui_xl]="rbvogui_complete.launch \
robot_xacro:=rbvogui_xl.urdf.xacro \
paused:=true\
"

ros_bringup_package_array[rb_vogui_xl_two_ur_arms]="rbvogui_sim_bringup"
ros_launch_file_array[rb_vogui_xl_two_ur_arms]="rbvogui_complete.launch \
robot_xacro:=rbvogui_xl.urdf.xacro \
launch_arm_control:=true \
paused:=true \
"